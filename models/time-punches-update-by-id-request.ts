/*
7shifts API

7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.

7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.

Start your free trial or request a demo at www.7shifts.com.

The version of the OpenAPI document: 2023-05-01
Contact: api-support@7shifts.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { TimePunchesUpdateByIdRequestBreaksInner } from './time-punches-update-by-id-request-breaks-inner';

/**
 * 
 * @export
 * @interface TimePunchesUpdateByIdRequest
 */
export interface TimePunchesUpdateByIdRequest {
    /**
     * Department ID
     * @type {number}
     * @memberof TimePunchesUpdateByIdRequest
     */
    'department_id'?: number;
    /**
     * The ID of the role that the user is clocking in to work for.
     * @type {number}
     * @memberof TimePunchesUpdateByIdRequest
     */
    'role_id'?: number;
    /**
     * The start date and time when the user clocked in. Formatted as ISO8601 datetime in UTC timezone.
     * @type {string}
     * @memberof TimePunchesUpdateByIdRequest
     */
    'clocked_in'?: string;
    /**
     * The start date and time when the user clocked out. Formatted as ISO8601 datetime in UTC timezone.
     * @type {string}
     * @memberof TimePunchesUpdateByIdRequest
     */
    'clocked_out'?: string;
    /**
     * Additional notes for a shift.
     * @type {string}
     * @memberof TimePunchesUpdateByIdRequest
     */
    'notes'?: string;
    /**
     * Tips declared for the shift in cents
     * @type {number}
     * @memberof TimePunchesUpdateByIdRequest
     */
    'tips'?: number | null;
    /**
     * List of breaks during a shift. Breaks must always be included in a correct state in update requests. The absence of an existing break in the payload implies that it should be deleted.
     * @type {Array<TimePunchesUpdateByIdRequestBreaksInner>}
     * @memberof TimePunchesUpdateByIdRequest
     */
    'breaks'?: Array<TimePunchesUpdateByIdRequestBreaksInner>;
}

