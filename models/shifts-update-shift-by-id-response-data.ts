/*
7shifts API

7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.

7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.

Start your free trial or request a demo at www.7shifts.com.

The version of the OpenAPI document: 2023-05-01
Contact: api-support@7shifts.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ShiftsListResponseDataInnerBreaksInner } from './shifts-list-response-data-inner-breaks-inner';

/**
 * 
 * @export
 * @interface ShiftsUpdateShiftByIdResponseData
 */
export interface ShiftsUpdateShiftByIdResponseData {
    /**
     * Shift ID
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'id': number;
    /**
     * User ID
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'user_id': number | null;
    /**
     * Start date time of the shift. UTC in ISO8601 format
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'start': string;
    /**
     * End date time of the shift. UTC in ISO8601 format
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'end': string;
    /**
     * If true the shift ends at closing time. If set end is not used.
     * @type {boolean}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'close': boolean;
    /**
     * If true the shift ends at business decline.
     * @type {boolean}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'business_decline': boolean;
    /**
     * Read Only. The hourly wage for this shift. In cents.
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'hourly_wage'?: number;
    /**
     * Department ID. Required if the location uses departments.
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'department_id': number | null;
    /**
     * The ID of the location that the shift is assigned to.
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'location_id': number;
    /**
     * Role ID. Required if the location uses roles.
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'role_id': number | null;
    /**
     * Notes displayed on a shift
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'notes': string;
    /**
     * Whether or not the shift is a draft shift. Draft shifts are shifts that have not yet been published.
     * @type {boolean}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'draft': boolean;
    /**
     * Whether or not the individual assigned to the shift has been notified of the shifts existence.
     * @type {boolean}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'notified': boolean;
    /**
     * If true the shift is not assigned to any user. Open shifts can be requested by users.
     * @type {boolean}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'open': boolean;
    /**
     * Shifts in a template that could not be assigned to any eligible employees.
     * @type {boolean}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'unassigned': boolean;
    /**
     * Specify the minimum user skill level required for the shift. Levels 1 - beginner, 2 - intermediate, 3 - Experienced.
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'unassigned_skill_level': number;
    /**
     * Specifies the scope of who can pick up the shift.
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'open_offer_type': ShiftsUpdateShiftByIdResponseDataOpenOfferTypeEnum;
    /**
     * Specified shift flags to track employee attendance
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'attendance_status': ShiftsUpdateShiftByIdResponseDataAttendanceStatusEnum;
    /**
     * Current publication status of the shift
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'publish_status': ShiftsUpdateShiftByIdResponseDataPublishStatusEnum;
    /**
     * Specify the grace minutes they can clock-in late.
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'late_minuets'?: number;
    /**
     * The created date of the shift in UTC
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'created': string | null;
    /**
     * The last modified date of the shift in UTC
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'modified': string | null;
    /**
     * Whether or not this shift is deleted.
     * @type {boolean}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'deleted': boolean;
    /**
     * Whether or not this shift is soft-deleted.
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'soft_deleted': string | null;
    /**
     * Station Number
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'station': number;
    /**
     * Station name
     * @type {string}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'station_name': string | null;
    /**
     * Station id
     * @type {number}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'station_id': number | null;
    /**
     * Breaks on the shift
     * @type {Array<ShiftsListResponseDataInnerBreaksInner>}
     * @memberof ShiftsUpdateShiftByIdResponseData
     */
    'breaks'?: Array<ShiftsListResponseDataInnerBreaksInner> | null;
}

type ShiftsUpdateShiftByIdResponseDataOpenOfferTypeEnum = 'all_location_members' | 'all_role_members' | 'set_of_location_members' | 'all_company_employees'
type ShiftsUpdateShiftByIdResponseDataAttendanceStatusEnum = 'none' | 'sick' | 'no_show' | 'late'
type ShiftsUpdateShiftByIdResponseDataPublishStatusEnum = 'draft' | 'published' | 'draft_deleted' | 'published_deleted'


