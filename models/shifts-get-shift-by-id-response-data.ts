/*
7shifts API

7shifts is a team management software designed for restaurants. We help managers and operators spend less time and effort scheduling their staff, reduce their monthly labor costs and improve team communication. The result is simplified team management, one shift at a time.

7shifts also offers free mobile apps (iOS and Android) allowing managers and employees to have everything at their fingertips.

Start your free trial or request a demo at www.7shifts.com.

The version of the OpenAPI document: 2023-05-01
Contact: api-support@7shifts.com

NOTE: This file is auto generated by Konfig (https://konfigthis.com).
*/
import type * as buffer from "buffer"

import { ShiftsListResponseDataInnerBreaksInner } from './shifts-list-response-data-inner-breaks-inner';

/**
 * 
 * @export
 * @interface ShiftsGetShiftByIdResponseData
 */
export interface ShiftsGetShiftByIdResponseData {
    /**
     * Shift ID
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'id': number;
    /**
     * User ID
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'user_id': number | null;
    /**
     * Start date time of the shift. UTC in ISO8601 format
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'start': string;
    /**
     * End date time of the shift. UTC in ISO8601 format
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'end': string;
    /**
     * If true the shift ends at closing time. If set end is not used.
     * @type {boolean}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'close': boolean;
    /**
     * If true the shift ends at business decline.
     * @type {boolean}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'business_decline': boolean;
    /**
     * Read Only. The hourly wage for this shift. In cents.
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'hourly_wage'?: number;
    /**
     * Department ID. Required if the location uses departments.
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'department_id': number | null;
    /**
     * The ID of the location that the shift is assigned to.
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'location_id': number;
    /**
     * Role ID. Required if the location uses roles.
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'role_id': number | null;
    /**
     * Notes displayed on a shift
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'notes': string;
    /**
     * Whether or not the shift is a draft shift. Draft shifts are shifts that have not yet been published.
     * @type {boolean}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'draft': boolean;
    /**
     * Whether or not the individual assigned to the shift has been notified of the shifts existence.
     * @type {boolean}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'notified': boolean;
    /**
     * If true the shift is not assigned to any user. Open shifts can be requested by users.
     * @type {boolean}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'open': boolean;
    /**
     * Shifts in a template that could not be assigned to any eligible employees.
     * @type {boolean}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'unassigned': boolean;
    /**
     * Specify the minimum user skill level required for the shift. Levels 1 - beginner, 2 - intermediate, 3 - Experienced.
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'unassigned_skill_level': number;
    /**
     * Specifies the scope of who can pick up the shift.
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'open_offer_type': ShiftsGetShiftByIdResponseDataOpenOfferTypeEnum;
    /**
     * Specified shift flags to track employee attendance
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'attendance_status': ShiftsGetShiftByIdResponseDataAttendanceStatusEnum;
    /**
     * Current publication status of the shift
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'publish_status': ShiftsGetShiftByIdResponseDataPublishStatusEnum;
    /**
     * Specify the grace minutes they can clock-in late.
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'late_minuets'?: number;
    /**
     * The created date of the shift in UTC
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'created': string | null;
    /**
     * The last modified date of the shift in UTC
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'modified': string | null;
    /**
     * Whether or not this shift is deleted.
     * @type {boolean}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'deleted': boolean;
    /**
     * Whether or not this shift is soft-deleted.
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'soft_deleted': string | null;
    /**
     * Station Number
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'station': number;
    /**
     * Station name
     * @type {string}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'station_name': string | null;
    /**
     * Station id
     * @type {number}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'station_id': number | null;
    /**
     * Breaks on the shift
     * @type {Array<ShiftsListResponseDataInnerBreaksInner>}
     * @memberof ShiftsGetShiftByIdResponseData
     */
    'breaks'?: Array<ShiftsListResponseDataInnerBreaksInner> | null;
}

type ShiftsGetShiftByIdResponseDataOpenOfferTypeEnum = 'all_location_members' | 'all_role_members' | 'set_of_location_members' | 'all_company_employees'
type ShiftsGetShiftByIdResponseDataAttendanceStatusEnum = 'none' | 'sick' | 'no_show' | 'late'
type ShiftsGetShiftByIdResponseDataPublishStatusEnum = 'draft' | 'published' | 'draft_deleted' | 'published_deleted'


